var data = {lines:[
{"lineNum":"    1","line":"#include \"pcre_binding.h\""},
{"lineNum":"    2","line":""},
{"lineNum":"    3","line":"#include <signal.h>"},
{"lineNum":"    4","line":"#include <stdio.h>"},
{"lineNum":"    5","line":"#include <string.h>"},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"#define PCRE2_CODE_UNIT_WIDTH 8"},
{"lineNum":"    8","line":"#include \"pcre2.h\""},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#define TRUE 1"},
{"lineNum":"   11","line":"#define FALSE 0"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"// reference: https://pcre2project.github.io/pcre2/doc/html/pcre2demo.html"},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"void get_last_error_message(RegexContext* context) {","class":"lineCov","hits":"1","order":"913","possible_hits":"1",},
{"lineNum":"   16","line":"    PCRE2_UCHAR buffer[256];"},
{"lineNum":"   17","line":"    pcre2_get_error_message(context->error_number, buffer, sizeof(buffer));","class":"lineCov","hits":"1","order":"914","possible_hits":"1",},
{"lineNum":"   18","line":"    context->error_message_len = sprintf(context->error_message,","class":"lineCov","hits":"1","order":"915","possible_hits":"1",},
{"lineNum":"   19","line":"                                         \"PCRE2 compilation failed at offset %d: %s\\n\","},
{"lineNum":"   20","line":"                                         (int)context->error_offset,"},
{"lineNum":"   21","line":"                                         buffer);"},
{"lineNum":"   22","line":"}"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"#define PCRE2_FINE 100  // 100 is pcre2 no error"},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"void reset_context(RegexContext* context) {","class":"lineCov","hits":"1","order":"883","possible_hits":"1",},
{"lineNum":"   27","line":"    context->error_number = PCRE2_FINE;","class":"lineCov","hits":"1","order":"884","possible_hits":"1",},
{"lineNum":"   28","line":"    context->error_offset = 0;","class":"lineCov","hits":"1","order":"885","possible_hits":"1",},
{"lineNum":"   29","line":"    context->error_message_len = 0;","class":"lineCov","hits":"1","order":"886","possible_hits":"1",},
{"lineNum":"   30","line":""},
{"lineNum":"   31","line":"    // intentionally do not reset these 2 options"},
{"lineNum":"   32","line":"    // regex_options"},
{"lineNum":"   33","line":"    // regex_extra_options"},
{"lineNum":"   34","line":"    // match_options"},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"    context->with_match_result = FALSE;","class":"lineCov","hits":"1","order":"887","possible_hits":"1",},
{"lineNum":"   37","line":"    context->next_offset = 0;","class":"lineCov","hits":"1","order":"888","possible_hits":"1",},
{"lineNum":"   38","line":"    context->origin_offset = 0;","class":"lineCov","hits":"1","order":"889","possible_hits":"1",},
{"lineNum":"   39","line":"    context->rc = 0;","class":"lineCov","hits":"1","order":"890","possible_hits":"1",},
{"lineNum":"   40","line":""},
{"lineNum":"   41","line":"    context->group_name_count = 0;","class":"lineCov","hits":"1","order":"891","possible_hits":"1",},
{"lineNum":"   42","line":"    context->group_names = NULL;","class":"lineCov","hits":"1","order":"892","possible_hits":"1",},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"    context->matched_count = 0;","class":"lineCov","hits":"1","order":"893","possible_hits":"1",},
{"lineNum":"   45","line":"    memset(&context->matched_result, 0, sizeof(RegexMatchResult));","class":"lineCov","hits":"1","order":"894","possible_hits":"1",},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"    context->matched_group_count = 0;","class":"lineCov","hits":"1","order":"895","possible_hits":"1",},
{"lineNum":"   48","line":"    context->matched_group_capacity = 0;","class":"lineCov","hits":"1","order":"896","possible_hits":"1",},
{"lineNum":"   49","line":"    context->matched_group_results = NULL;","class":"lineCov","hits":"1","order":"897","possible_hits":"1",},
{"lineNum":"   50","line":""},
{"lineNum":"   51","line":"    context->re = NULL;","class":"lineCov","hits":"1","order":"898","possible_hits":"1",},
{"lineNum":"   52","line":"    context->match_data = NULL;","class":"lineCov","hits":"1","order":"899","possible_hits":"1",},
{"lineNum":"   53","line":"    context->compile_context = NULL;","class":"lineCov","hits":"1","order":"900","possible_hits":"1",},
{"lineNum":"   54","line":"}"},
{"lineNum":"   55","line":""},
{"lineNum":"   56","line":"uint8_t compile(RegexContext* context, const unsigned char* pattern) {","class":"lineCov","hits":"1","order":"881","possible_hits":"1",},
{"lineNum":"   57","line":"    reset_context(context);","class":"lineCov","hits":"1","order":"882","possible_hits":"1",},
{"lineNum":"   58","line":""},
{"lineNum":"   59","line":"    pcre2_code* re;"},
{"lineNum":"   60","line":"    pcre2_compile_context* compile_context;"},
{"lineNum":"   61","line":"    int r;"},
{"lineNum":"   62","line":""},
{"lineNum":"   63","line":"    if (context->regex_extra_options == 0) {","class":"lineCov","hits":"1","order":"901","possible_hits":"1",},
{"lineNum":"   64","line":"        re = pcre2_compile(","class":"lineCov","hits":"1","order":"906","possible_hits":"1",},
{"lineNum":"   65","line":"            pattern,","class":"lineCov","hits":"1","order":"902","possible_hits":"1",},
{"lineNum":"   66","line":"            PCRE2_ZERO_TERMINATED,"},
{"lineNum":"   67","line":"            context->regex_options,","class":"lineCov","hits":"1","order":"903","possible_hits":"1",},
{"lineNum":"   68","line":"            &context->error_number,","class":"lineCov","hits":"1","order":"904","possible_hits":"1",},
{"lineNum":"   69","line":"            &context->error_offset,","class":"lineCov","hits":"1","order":"905","possible_hits":"1",},
{"lineNum":"   70","line":"            NULL);"},
{"lineNum":"   71","line":"    } else {","class":"lineCov","hits":"1","order":"907","possible_hits":"1",},
{"lineNum":"   72","line":"        compile_context = pcre2_compile_context_create(NULL);","class":"lineCov","hits":"1","order":"1318","possible_hits":"1",},
{"lineNum":"   73","line":"        if (compile_context == NULL) {","class":"lineCov","hits":"1","order":"1319","possible_hits":"1",},
{"lineNum":"   74","line":"            fprintf(stderr, \"pcre2 compile context creation failed! Abort!\"); /* no-cover */"},
{"lineNum":"   75","line":"            raise(SIGABRT);                                                   /* no-cover */"},
{"lineNum":"   76","line":"        }                                                                     /* no-cover */"},
{"lineNum":"   77","line":"        r = pcre2_set_compile_extra_options(compile_context, context->regex_extra_options);","class":"lineCov","hits":"1","order":"1320","possible_hits":"1",},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"        if (r != 0) {","class":"lineCov","hits":"1","order":"1321","possible_hits":"1",},
{"lineNum":"   80","line":"            fprintf(stderr, \"pcre2 pcre2_set_compile_extra_options failed with %x! Abort!\", context->regex_extra_options); /* no-cover */"},
{"lineNum":"   81","line":"            raise(SIGABRT);                                                                                                /* no-cover */"},
{"lineNum":"   82","line":"        }                                                                                                                  /* no-cover */"},
{"lineNum":"   83","line":""},
{"lineNum":"   84","line":"        re = pcre2_compile(","class":"lineCov","hits":"1","order":"1327","possible_hits":"1",},
{"lineNum":"   85","line":"            pattern,","class":"lineCov","hits":"1","order":"1322","possible_hits":"1",},
{"lineNum":"   86","line":"            PCRE2_ZERO_TERMINATED,"},
{"lineNum":"   87","line":"            context->regex_options,","class":"lineCov","hits":"1","order":"1323","possible_hits":"1",},
{"lineNum":"   88","line":"            &context->error_number,","class":"lineCov","hits":"1","order":"1324","possible_hits":"1",},
{"lineNum":"   89","line":"            &context->error_offset,","class":"lineCov","hits":"1","order":"1325","possible_hits":"1",},
{"lineNum":"   90","line":"            compile_context);","class":"lineCov","hits":"1","order":"1326","possible_hits":"1",},
{"lineNum":"   91","line":""},
{"lineNum":"   92","line":"        context->compile_context = (void*)compile_context;","class":"lineCov","hits":"1","order":"1328","possible_hits":"1",},
{"lineNum":"   93","line":"    }"},
{"lineNum":"   94","line":""},
{"lineNum":"   95","line":"    context->re = (void*)re;","class":"lineCov","hits":"1","order":"908","possible_hits":"1",},
{"lineNum":"   96","line":""},
{"lineNum":"   97","line":"    if (re != NULL) {","class":"lineCov","hits":"1","order":"909","possible_hits":"1",},
{"lineNum":"   98","line":"        uint32_t group_capacity;"},
{"lineNum":"   99","line":"        pcre2_pattern_info((pcre2_code*)context->re, PCRE2_INFO_CAPTURECOUNT, &group_capacity);","class":"lineCov","hits":"1","order":"926","possible_hits":"1",},
{"lineNum":"  100","line":"        context->matched_group_capacity = group_capacity;","class":"lineCov","hits":"1","order":"927","possible_hits":"1",},
{"lineNum":"  101","line":""},
{"lineNum":"  102","line":"        uint32_t group_name_count;"},
{"lineNum":"  103","line":"        pcre2_pattern_info(re, PCRE2_INFO_NAMECOUNT, &group_name_count);","class":"lineCov","hits":"1","order":"928","possible_hits":"1",},
{"lineNum":"  104","line":"        context->group_name_count = group_name_count;","class":"lineCov","hits":"1","order":"929","possible_hits":"1",},
{"lineNum":"  105","line":""},
{"lineNum":"  106","line":"        if (group_name_count > 0) {","class":"lineCov","hits":"1","order":"930","possible_hits":"1",},
{"lineNum":"  107","line":"            context->group_names = (RegexGroupName*)malloc(sizeof(RegexGroupName) * group_name_count);","class":"lineCov","hits":"1","order":"1011","possible_hits":"1",},
{"lineNum":"  108","line":"            if (context->group_names == NULL) {","class":"lineCov","hits":"1","order":"1012","possible_hits":"1",},
{"lineNum":"  109","line":"                fprintf(stderr, \"memory allocation for group names(%d) failed! Abort!\", group_name_count); /* no-cover */"},
{"lineNum":"  110","line":"                raise(SIGABRT);                                                                            /* no-cover */"},
{"lineNum":"  111","line":"            }                                                                                              /* no-cover */"},
{"lineNum":"  112","line":""},
{"lineNum":"  113","line":"            PCRE2_SPTR name_table;"},
{"lineNum":"  114","line":"            uint32_t name_entry_size;"},
{"lineNum":"  115","line":"            PCRE2_SPTR tabptr;"},
{"lineNum":"  116","line":"            int i;"},
{"lineNum":"  117","line":""},
{"lineNum":"  118","line":"            pcre2_pattern_info((pcre2_code*)context->re, PCRE2_INFO_NAMETABLE, &name_table);","class":"lineCov","hits":"1","order":"1013","possible_hits":"1",},
{"lineNum":"  119","line":"            pcre2_pattern_info((pcre2_code*)context->re, PCRE2_INFO_NAMEENTRYSIZE, &name_entry_size);","class":"lineCov","hits":"1","order":"1014","possible_hits":"1",},
{"lineNum":"  120","line":"            tabptr = name_table;","class":"lineCov","hits":"1","order":"1015","possible_hits":"1",},
{"lineNum":"  121","line":""},
{"lineNum":"  122","line":"            for (i = 0; i < group_name_count; i++) {","class":"lineCov","hits":"2","order":"1016","possible_hits":"2",},
{"lineNum":"  123","line":"                RegexGroupName* group_name_ptr = context->group_names + i;","class":"lineCov","hits":"1","order":"1017","possible_hits":"1",},
{"lineNum":"  124","line":"                group_name_ptr->index = (tabptr[0] << 8) | tabptr[1];","class":"lineCov","hits":"1","order":"1018","possible_hits":"1",},
{"lineNum":"  125","line":"                group_name_ptr->name_len = strlen((const char*)tabptr + 2);          // pcre group name is 0 terminated","class":"lineCov","hits":"1","order":"1019","possible_hits":"1",},
{"lineNum":"  126","line":"                group_name_ptr->name = (char*)malloc(group_name_ptr->name_len + 1);  // +1 for the zero sentinel","class":"lineCov","hits":"1","order":"1020","possible_hits":"1",},
{"lineNum":"  127","line":"                if (group_name_ptr->name == NULL) {","class":"lineCov","hits":"1","order":"1021","possible_hits":"1",},
{"lineNum":"  128","line":"                    fprintf(stderr, \"memory allocation for group name (%d bytes) failed! Abort!\", (int)group_name_ptr->name_len); /* no-cover */"},
{"lineNum":"  129","line":"                    raise(SIGABRT);                                                                                               /* no-cover */"},
{"lineNum":"  130","line":"                }                                                                                                                 /* no-cover */"},
{"lineNum":"  131","line":"                sprintf(group_name_ptr->name, \"%s\", tabptr + 2);","class":"lineCov","hits":"1","order":"1022","possible_hits":"1",},
{"lineNum":"  132","line":"                group_name_ptr->name[group_name_ptr->name_len + 1] = 0;","class":"lineCov","hits":"1","order":"1023","possible_hits":"1",},
{"lineNum":"  133","line":"                tabptr += name_entry_size;  // move to next entry","class":"lineCov","hits":"1","order":"1024","possible_hits":"1",},
{"lineNum":"  134","line":"            }","class":"lineCov","hits":"1","order":"1025","possible_hits":"1",},
{"lineNum":"  135","line":"        }","class":"lineCov","hits":"1","order":"1026","possible_hits":"1",},
{"lineNum":"  136","line":"    }","class":"lineCov","hits":"1","order":"931","possible_hits":"1",},
{"lineNum":"  137","line":""},
{"lineNum":"  138","line":"    return re == NULL ? FALSE : TRUE;","class":"lineCov","hits":"1","order":"910","possible_hits":"1",},
{"lineNum":"  139","line":"}"},
{"lineNum":"  140","line":""},
{"lineNum":"  141","line":"void free_context(RegexContext* context) {","class":"lineCov","hits":"1","order":"999","possible_hits":"1",},
{"lineNum":"  142","line":"    if (context->re != NULL) {","class":"lineCov","hits":"1","order":"1000","possible_hits":"1",},
{"lineNum":"  143","line":"        pcre2_code_free((pcre2_code*)context->re);","class":"lineCov","hits":"1","order":"1001","possible_hits":"1",},
{"lineNum":"  144","line":"        if (context->group_name_count > 0) {","class":"lineCov","hits":"1","order":"1002","possible_hits":"1",},
{"lineNum":"  145","line":"            int i;"},
{"lineNum":"  146","line":"            for (i = 0; i < context->group_name_count; i++) {","class":"lineCov","hits":"2","order":"1144","possible_hits":"2",},
{"lineNum":"  147","line":"                free(context->group_names[i].name);","class":"lineCov","hits":"1","order":"1145","possible_hits":"1",},
{"lineNum":"  148","line":"            }","class":"lineCov","hits":"1","order":"1146","possible_hits":"1",},
{"lineNum":"  149","line":"            free(context->group_names);","class":"lineCov","hits":"1","order":"1147","possible_hits":"1",},
{"lineNum":"  150","line":"        }","class":"lineCov","hits":"1","order":"1148","possible_hits":"1",},
{"lineNum":"  151","line":"    }","class":"lineCov","hits":"1","order":"1003","possible_hits":"1",},
{"lineNum":"  152","line":"    if (context->match_data != NULL) {","class":"lineCov","hits":"1","order":"1004","possible_hits":"1",},
{"lineNum":"  153","line":"        pcre2_match_data_free((pcre2_match_data*)context->match_data);","class":"lineCov","hits":"1","order":"1005","possible_hits":"1",},
{"lineNum":"  154","line":"    }","class":"lineCov","hits":"1","order":"1006","possible_hits":"1",},
{"lineNum":"  155","line":"    if (context->compile_context != NULL) {","class":"lineCov","hits":"1","order":"1007","possible_hits":"1",},
{"lineNum":"  156","line":"        pcre2_compile_context_free((pcre2_compile_context*)context->compile_context);","class":"lineCov","hits":"1","order":"1333","possible_hits":"1",},
{"lineNum":"  157","line":"    }","class":"lineCov","hits":"1","order":"1334","possible_hits":"1",},
{"lineNum":"  158","line":"    reset_context(context);","class":"lineCov","hits":"1","order":"1008","possible_hits":"1",},
{"lineNum":"  159","line":"}"},
{"lineNum":"  160","line":""},
{"lineNum":"  161","line":"int64_t match(RegexContext* context, const unsigned char* subject, size_t subject_len, size_t start_offset) {","class":"lineCov","hits":"1","order":"938","possible_hits":"1",},
{"lineNum":"  162","line":"    if (context->re == NULL) {","class":"lineCov","hits":"1","order":"939","possible_hits":"1",},
{"lineNum":"  163","line":"        return 0;","class":"lineCov","hits":"1","order":"1425","possible_hits":"1",},
{"lineNum":"  164","line":"    }"},
{"lineNum":"  165","line":""},
{"lineNum":"  166","line":"    context->match_data = pcre2_match_data_create_from_pattern(context->re, NULL);","class":"lineCov","hits":"1","order":"940","possible_hits":"1",},
{"lineNum":"  167","line":"    context->rc = pcre2_match(","class":"lineCov","hits":"1","order":"947","possible_hits":"1",},
{"lineNum":"  168","line":"        (pcre2_code*)context->re,","class":"lineCov","hits":"1","order":"941","possible_hits":"1",},
{"lineNum":"  169","line":"        subject,","class":"lineCov","hits":"1","order":"942","possible_hits":"1",},
{"lineNum":"  170","line":"        subject_len,","class":"lineCov","hits":"1","order":"943","possible_hits":"1",},
{"lineNum":"  171","line":"        start_offset,","class":"lineCov","hits":"1","order":"944","possible_hits":"1",},
{"lineNum":"  172","line":"        context->match_options,","class":"lineCov","hits":"1","order":"945","possible_hits":"1",},
{"lineNum":"  173","line":"        context->match_data,","class":"lineCov","hits":"1","order":"946","possible_hits":"1",},
{"lineNum":"  174","line":"        NULL);"},
{"lineNum":"  175","line":""},
{"lineNum":"  176","line":"    // there is always only one match result if matched, others in rc are group results"},
{"lineNum":"  177","line":"    context->matched_count = context->rc > 0 ? 1 : 0;","class":"lineCov","hits":"1","order":"948","possible_hits":"1",},
{"lineNum":"  178","line":"    context->with_match_result = TRUE;","class":"lineCov","hits":"1","order":"949","possible_hits":"1",},
{"lineNum":"  179","line":""},
{"lineNum":"  180","line":"    context->origin_offset = start_offset;","class":"lineCov","hits":"1","order":"950","possible_hits":"1",},
{"lineNum":"  181","line":""},
{"lineNum":"  182","line":"    return context->rc;","class":"lineCov","hits":"1","order":"951","possible_hits":"1",},
{"lineNum":"  183","line":"}","class":"lineCov","hits":"1","order":"952","possible_hits":"1",},
{"lineNum":"  184","line":""},
{"lineNum":"  185","line":"void fetch_match_results(RegexContext* context) {","class":"lineCov","hits":"1","order":"960","possible_hits":"1",},
{"lineNum":"  186","line":"    if (context->with_match_result == FALSE) {","class":"lineCov","hits":"1","order":"961","possible_hits":"1",},
{"lineNum":"  187","line":"        return;","class":"lineCov","hits":"1","order":"2119","possible_hits":"1",},
{"lineNum":"  188","line":"    }"},
{"lineNum":"  189","line":""},
{"lineNum":"  190","line":"    int i;"},
{"lineNum":"  191","line":"    int j;"},
{"lineNum":"  192","line":"    int group_index;"},
{"lineNum":"  193","line":"    int name_index;"},
{"lineNum":"  194","line":"    int found_group_name_index = -1;","class":"lineCov","hits":"1","order":"962","possible_hits":"1",},
{"lineNum":"  195","line":"    PCRE2_SPTR name_table;"},
{"lineNum":"  196","line":"    uint32_t name_entry_size;"},
{"lineNum":"  197","line":"    PCRE2_SPTR tabptr;"},
{"lineNum":"  198","line":"    PCRE2_SIZE* ovector = pcre2_get_ovector_pointer(context->match_data);","class":"lineCov","hits":"1","order":"963","possible_hits":"1",},
{"lineNum":"  199","line":""},
{"lineNum":"  200","line":"    pcre2_pattern_info((pcre2_code*)context->re, PCRE2_INFO_NAMETABLE, &name_table);","class":"lineCov","hits":"1","order":"964","possible_hits":"1",},
{"lineNum":"  201","line":"    pcre2_pattern_info((pcre2_code*)context->re, PCRE2_INFO_NAMEENTRYSIZE, &name_entry_size);","class":"lineCov","hits":"1","order":"965","possible_hits":"1",},
{"lineNum":"  202","line":""},
{"lineNum":"  203","line":"    // for single match"},
{"lineNum":"  204","line":"    // 1. if context->rc == 1, means there is only match but no group results"},
{"lineNum":"  205","line":"    // 2. if context->rc > 1, means the [0] is match result, but rest are all group results"},
{"lineNum":"  206","line":"    //    however count of all groups results can be > named_group_count, which are just unnamed groups"},
{"lineNum":"  207","line":""},
{"lineNum":"  208","line":"    tabptr = name_table;","class":"lineCov","hits":"1","order":"966","possible_hits":"1",},
{"lineNum":"  209","line":"    for (i = 0; i < context->rc; i++) {","class":"lineCov","hits":"2","order":"967","possible_hits":"2",},
{"lineNum":"  210","line":"        if (i == 0) {","class":"lineCov","hits":"1","order":"968","possible_hits":"1",},
{"lineNum":"  211","line":"            // the first entry is the single match result"},
{"lineNum":"  212","line":"            context->matched_result.start = ovector[2 * i];","class":"lineCov","hits":"1","order":"969","possible_hits":"1",},
{"lineNum":"  213","line":"            context->matched_result.len = ovector[2 * i + 1] - ovector[2 * i];","class":"lineCov","hits":"1","order":"970","possible_hits":"1",},
{"lineNum":"  214","line":"        } else {","class":"lineCov","hits":"1","order":"971","possible_hits":"1",},
{"lineNum":"  215","line":"            group_index = i;","class":"lineCov","hits":"1","order":"1039","possible_hits":"1",},
{"lineNum":"  216","line":"            name_index = (tabptr[0] << 8) | tabptr[1];","class":"lineCov","hits":"1","order":"1040","possible_hits":"1",},
{"lineNum":"  217","line":""},
{"lineNum":"  218","line":"            found_group_name_index = -1;","class":"lineCov","hits":"1","order":"1041","possible_hits":"1",},
{"lineNum":"  219","line":"            for (j = 0; j < context->group_name_count; j++) {","class":"lineCov","hits":"2","order":"1042","possible_hits":"2",},
{"lineNum":"  220","line":"                // this is stupid, a hash map will be better, but really necessary? are we going to have too many group names?"},
{"lineNum":"  221","line":"                if (context->group_names[j].index == group_index) {","class":"lineCov","hits":"1","order":"1043","possible_hits":"1",},
{"lineNum":"  222","line":"                    found_group_name_index = j;","class":"lineCov","hits":"1","order":"1044","possible_hits":"1",},
{"lineNum":"  223","line":"                    break;","class":"lineCov","hits":"1","order":"1045","possible_hits":"1",},
{"lineNum":"  224","line":"                }"},
{"lineNum":"  225","line":"            }","class":"lineCov","hits":"1","order":"1198","possible_hits":"1",},
{"lineNum":"  226","line":""},
{"lineNum":"  227","line":"            RegexGroupResult* cur_group_result = context->matched_group_results + (group_index - 1);  // -1 because 1st is single match result","class":"lineCov","hits":"1","order":"1046","possible_hits":"1",},
{"lineNum":"  228","line":""},
{"lineNum":"  229","line":"            if (found_group_name_index >= 0) {","class":"lineCov","hits":"1","order":"1047","possible_hits":"1",},
{"lineNum":"  230","line":"                cur_group_result->name = context->group_names[found_group_name_index].name;","class":"lineCov","hits":"1","order":"1048","possible_hits":"1",},
{"lineNum":"  231","line":"                cur_group_result->name_len = context->group_names[found_group_name_index].name_len;","class":"lineCov","hits":"1","order":"1049","possible_hits":"1",},
{"lineNum":"  232","line":"                cur_group_result->index = group_index;","class":"lineCov","hits":"1","order":"1050","possible_hits":"1",},
{"lineNum":"  233","line":"                cur_group_result->start = ovector[2 * i];","class":"lineCov","hits":"1","order":"1051","possible_hits":"1",},
{"lineNum":"  234","line":"                cur_group_result->len = ovector[2 * i + 1] - ovector[2 * i];","class":"lineCov","hits":"1","order":"1052","possible_hits":"1",},
{"lineNum":"  235","line":"            } else {","class":"lineCov","hits":"1","order":"1053","possible_hits":"1",},
{"lineNum":"  236","line":"                cur_group_result->name = NULL;","class":"lineCov","hits":"1","order":"1199","possible_hits":"1",},
{"lineNum":"  237","line":"                cur_group_result->name_len = 0;","class":"lineCov","hits":"1","order":"1200","possible_hits":"1",},
{"lineNum":"  238","line":"                cur_group_result->index = group_index;","class":"lineCov","hits":"1","order":"1201","possible_hits":"1",},
{"lineNum":"  239","line":"                cur_group_result->start = ovector[2 * i];","class":"lineCov","hits":"1","order":"1202","possible_hits":"1",},
{"lineNum":"  240","line":"                cur_group_result->len = ovector[2 * i + 1] - ovector[2 * i];","class":"lineCov","hits":"1","order":"1203","possible_hits":"1",},
{"lineNum":"  241","line":"            }"},
{"lineNum":"  242","line":""},
{"lineNum":"  243","line":"            context->matched_group_count += 1;","class":"lineCov","hits":"1","order":"1054","possible_hits":"1",},
{"lineNum":"  244","line":"        }"},
{"lineNum":"  245","line":"    }","class":"lineCov","hits":"1","order":"972","possible_hits":"1",},
{"lineNum":"  246","line":"}"},
{"lineNum":"  247","line":""},
{"lineNum":"  248","line":"void get_next_offset(RegexContext* context, const unsigned char* subject, size_t subject_len) {","class":"lineCov","hits":"1","order":"980","possible_hits":"1",},
{"lineNum":"  249","line":"    if (context->with_match_result == FALSE) {","class":"lineCov","hits":"1","order":"981","possible_hits":"1",},
{"lineNum":"  250","line":"        return;","class":"lineCov","hits":"1","order":"2122","possible_hits":"1",},
{"lineNum":"  251","line":"    }"},
{"lineNum":"  252","line":""},
{"lineNum":"  253","line":"    uint32_t option_bits;"},
{"lineNum":"  254","line":"    pcre2_pattern_info((pcre2_code*)context->re, PCRE2_INFO_ALLOPTIONS, &option_bits);","class":"lineCov","hits":"1","order":"982","possible_hits":"1",},
{"lineNum":"  255","line":""},
{"lineNum":"  256","line":"    int utf8 = (option_bits & PCRE2_UTF) != 0;","class":"lineCov","hits":"1","order":"983","possible_hits":"1",},
{"lineNum":"  257","line":""},
{"lineNum":"  258","line":"    PCRE2_SIZE* ovector = (PCRE2_SIZE*)pcre2_get_ovector_pointer(context->match_data);","class":"lineCov","hits":"1","order":"984","possible_hits":"1",},
{"lineNum":"  259","line":"    PCRE2_SIZE start_offset = ovector[1];","class":"lineCov","hits":"1","order":"985","possible_hits":"1",},
{"lineNum":"  260","line":""},
{"lineNum":"  261","line":"    if (ovector[0] != ovector[1]) {","class":"lineCov","hits":"1","order":"986","possible_hits":"1",},
{"lineNum":"  262","line":"        // as instructed by pcre2 demo code to handle tricky case to avoid infinite loop"},
{"lineNum":"  263","line":"        PCRE2_SIZE startchar = pcre2_get_startchar(context->match_data);","class":"lineCov","hits":"1","order":"987","possible_hits":"1",},
{"lineNum":"  264","line":"        if (start_offset <= startchar) {","class":"lineCov","hits":"1","order":"988","possible_hits":"1",},
{"lineNum":"  265","line":"            if (startchar >= subject_len) {","class":"lineCov","hits":"1","order":"1337","possible_hits":"1",},
{"lineNum":"  266","line":"                start_offset = subject_len; /* Reached end of subject.   */","class":"lineCov","hits":"1","order":"1348","possible_hits":"1",},
{"lineNum":"  267","line":"            }","class":"lineCov","hits":"1","order":"1349","possible_hits":"1",},
{"lineNum":"  268","line":"            start_offset = startchar + 1; /* Advance by one character. */","class":"lineCov","hits":"1","order":"1338","possible_hits":"1",},
{"lineNum":"  269","line":"            if (utf8) {                   /* If UTF-8, it may be more than one code unit. */","class":"lineCov","hits":"1","order":"1339","possible_hits":"1",},
{"lineNum":"  270","line":"                for (; start_offset < subject_len; start_offset++)","class":"linePartCov","hits":"1","order":"1340","possible_hits":"2",},
{"lineNum":"  271","line":"                    if ((subject[start_offset] & 0xc0) != 0x80) break;","class":"lineCov","hits":"1","order":"1341","possible_hits":"1",},
{"lineNum":"  272","line":"            }","class":"lineCov","hits":"1","order":"1342","possible_hits":"1",},
{"lineNum":"  273","line":"        }","class":"lineCov","hits":"1","order":"1343","possible_hits":"1",},
{"lineNum":"  274","line":"    }","class":"lineCov","hits":"1","order":"989","possible_hits":"1",},
{"lineNum":"  275","line":""},
{"lineNum":"  276","line":"    context->next_offset = start_offset;","class":"lineCov","hits":"1","order":"990","possible_hits":"1",},
{"lineNum":"  277","line":"}","class":"lineCov","hits":"1","order":"991","possible_hits":"1",},
{"lineNum":"  278","line":""},
{"lineNum":"  279","line":"void free_for_next_match(RegexContext* context) {","class":"lineCov","hits":"1","order":"1083","possible_hits":"1",},
{"lineNum":"  280","line":"    // pay attention to not free re, group_names as they should be kept same for next match"},
{"lineNum":"  281","line":""},
{"lineNum":"  282","line":"    if (context->with_match_result == FALSE) {","class":"lineCov","hits":"1","order":"1084","possible_hits":"1",},
{"lineNum":"  283","line":"        return;","class":"lineCov","hits":"1","order":"1267","possible_hits":"1",},
{"lineNum":"  284","line":"    }"},
{"lineNum":"  285","line":""},
{"lineNum":"  286","line":"    // if (context->re != NULL) {"},
{"lineNum":"  287","line":"    //     pcre2_code_free((pcre2_code*)context->re);"},
{"lineNum":"  288","line":"    // }"},
{"lineNum":"  289","line":""},
{"lineNum":"  290","line":"    if (context->match_data != NULL) {","class":"lineCov","hits":"1","order":"1085","possible_hits":"1",},
{"lineNum":"  291","line":"        pcre2_match_data_free((pcre2_match_data*)context->match_data);","class":"lineCov","hits":"1","order":"1086","possible_hits":"1",},
{"lineNum":"  292","line":"    }","class":"lineCov","hits":"1","order":"1087","possible_hits":"1",},
{"lineNum":"  293","line":""},
{"lineNum":"  294","line":"    context->error_number = PCRE2_FINE;","class":"lineCov","hits":"1","order":"1088","possible_hits":"1",},
{"lineNum":"  295","line":"    context->error_offset = 0;","class":"lineCov","hits":"1","order":"1089","possible_hits":"1",},
{"lineNum":"  296","line":"    context->error_message_len = 0;","class":"lineCov","hits":"1","order":"1090","possible_hits":"1",},
{"lineNum":"  297","line":""},
{"lineNum":"  298","line":"    context->with_match_result = FALSE;","class":"lineCov","hits":"1","order":"1091","possible_hits":"1",},
{"lineNum":"  299","line":"    context->next_offset = 0;","class":"lineCov","hits":"1","order":"1092","possible_hits":"1",},
{"lineNum":"  300","line":"    context->origin_offset = 0;","class":"lineCov","hits":"1","order":"1093","possible_hits":"1",},
{"lineNum":"  301","line":"    context->rc = 0;","class":"lineCov","hits":"1","order":"1094","possible_hits":"1",},
{"lineNum":"  302","line":""},
{"lineNum":"  303","line":"    context->matched_count = 0;","class":"lineCov","hits":"1","order":"1095","possible_hits":"1",},
{"lineNum":"  304","line":"    memset(&context->matched_result, 0, sizeof(RegexMatchResult));","class":"lineCov","hits":"1","order":"1096","possible_hits":"1",},
{"lineNum":"  305","line":""},
{"lineNum":"  306","line":"    context->matched_group_count = 0;","class":"lineCov","hits":"1","order":"1097","possible_hits":"1",},
{"lineNum":"  307","line":""},
{"lineNum":"  308","line":"    // do not reset group_capacity and matched_group_results mem as they can be reused"},
{"lineNum":"  309","line":"    // context->matched_group_capacity = 0;"},
{"lineNum":"  310","line":"    // context->matched_group_results = NULL;"},
{"lineNum":"  311","line":""},
{"lineNum":"  312","line":"    context->match_data = NULL;","class":"lineCov","hits":"1","order":"1098","possible_hits":"1",},
{"lineNum":"  313","line":"    // context->re = NULL;"},
{"lineNum":"  314","line":"}","class":"lineCov","hits":"1","order":"1099","possible_hits":"1",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "pcre_test", "date" : "2024-02-02 22:09:19", "instrumented" : 175, "covered" : 175,};
var merged_data = [];
